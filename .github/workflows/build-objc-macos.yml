name: Build Objective-C on macOS
on: [push, pull_request]

jobs:
  build:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Check Xcode version and install SDL2
        run: |
          xcodebuild -version
          clang --version
          
          # Install SDL2 and SDL2_ttf via Homebrew
          brew install sdl2 sdl2_ttf
      
      - name: Build SDL2 Hello World with CMake
        run: |
          echo "=== Building SDL2 Hello World with CMake ==="
          
          # Build with CMake (command line)
          mkdir -p build
          cd build
          cmake ..
          make -j$(sysctl -n hw.ncpu)
          
          echo "=== Checking SDL2 executable ==="
          # On macOS, CMake creates an app bundle
          if [ -d SDL2HelloWorld.app ]; then
              echo "Found app bundle:"
              ls -la SDL2HelloWorld.app/Contents/MacOS/SDL2HelloWorld
              file SDL2HelloWorld.app/Contents/MacOS/SDL2HelloWorld
              otool -L SDL2HelloWorld.app/Contents/MacOS/SDL2HelloWorld
          elif [ -f SDL2HelloWorld ]; then
              echo "Found standalone executable:"
              file SDL2HelloWorld
              ls -la SDL2HelloWorld
              otool -L SDL2HelloWorld
          else
              echo "No executable found, checking build directory:"
              find . -name "SDL2HelloWorld*" -type f -o -type d | head -10
          fi
          
          echo "=== SDL2 Hello World built successfully with CMake ==="
          
          # Also generate Xcode project
          cd ..
          mkdir -p build-xcode
          cd build-xcode
          echo -e "\n=== Generating Xcode project ==="
          cmake -G Xcode ..
          
          echo "=== Xcode project generated ==="
          ls -la
          
          # Build with xcodebuild
          echo -e "\n=== Building with xcodebuild ==="
          xcodebuild -project SDL2HelloWorld.xcodeproj -configuration Release
          
          echo "=== Checking Xcode-built executable ==="
          find . -name SDL2HelloWorld -type f -perm +111
          
          # Also test direct compilation for comparison
          cd ..
          echo -e "\n=== Building SDL2 Hello World with direct compilation (legacy) ==="
          
          # Get SDL2 paths from Homebrew
          SDL2_PATH=$(brew --prefix sdl2)
          SDL2_TTF_PATH=$(brew --prefix sdl2_ttf)
          
          clang -framework Foundation \
                -fobjc-arc \
                -I"$SDL2_PATH/include/SDL2" \
                -I"$SDL2_TTF_PATH/include/SDL2" \
                -L"$SDL2_PATH/lib" \
                -L"$SDL2_TTF_PATH/lib" \
                SDLWindow.m SDLRenderer.m TextRenderer.m HelloWorldApp.m sdl_main.m \
                -o sdl_hello_direct \
                -lSDL2 -lSDL2_ttf
          
          echo "=== Checking direct compilation executable ==="
          file sdl_hello_direct
          
          echo "Note: GUI application requires display - would need virtual display for testing"
      
      - name: Create SDL2 Package
        run: |
          mkdir -p package
          
          # Copy SDL2 app bundle from CMake build (primary output on macOS)
          if [ -d build/SDL2HelloWorld.app ]; then
              cp -r build/SDL2HelloWorld.app package/
          elif [ -f build/SDL2HelloWorld ]; then
              # Fallback to plain executable if no bundle
              cp build/SDL2HelloWorld package/
          fi
          
          # Copy Xcode-built app if it exists
          XCODE_APP=$(find build-xcode -name "SDL2HelloWorld.app" -type d | head -1)
          if [ -n "$XCODE_APP" ] && [ -d "$XCODE_APP" ]; then
              cp -r "$XCODE_APP" package/SDL2HelloWorld-Xcode.app
          fi
          
          # Create README
          cat << 'EOF' > package/README.txt
          SDL2 Hello World for macOS
          ==========================
          
          This package contains an SDL2-based Objective-C application built with CMake.
          
          Files:
          - SDL2HelloWorld: Command-line executable built with CMake
          - SDL2HelloWorld.app: macOS application bundle (if available)
          - SDL2HelloWorld-Xcode.app: Application built with Xcode project
          
          Requirements:
          - macOS
          - SDL2 and SDL2_ttf (installed via Homebrew)
          
          To run:
          ./SDL2HelloWorld
          or
          open SDL2HelloWorld.app
          
          Note: This is a graphical SDL2 application that requires a display.
          EOF
          
          echo "=== Package contents ==="
          ls -la package/
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sdl2-hello-world-macos
          path: package/